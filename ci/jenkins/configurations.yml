configurations:
    centos-7:
        os: centos
        os_family: linux
        version: 7
        agents:
            build:
                dockerfile: "ci/jenkins/docker/build/centos-7/Dockerfile"
                label: "linux && docker"
                cpack_generator: RPM
                additionalBuildArgs: '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'
                build_dir: build
            test:
              dockerImage: centos:7
              label: linux && docker
    centos-8:
        os: centos
        os_family: linux
        version: 8
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/centos-8/Dockerfile
                label: linux && docker
                cpack_generator: RPM
                additionalBuildArgs: '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'
                build_dir: build
            test:
                dockerImage: centos:8
                label: linux && docker
    fedora-31:
        os: fedora
        os_family: linux
        version: 31
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/fedora-31/Dockerfile
                label: linux && docker
                cpack_generator: RPM
                additionalBuildArgs: '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'
                build_dir: build
            test:
                dockerImage: fedora:31
                label: linux && docker
    fedora-31-nocurl:
        os: fedora
        os_family: linux
        version: 31
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/fedora-31-nocurl/Dockerfile
                label: linux && docker
                cpack_generator: RPM
                additionalBuildArgs: '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'
                build_dir: build
            test:
                dockerImage: fedora:31
                label: linux && docker
    ubuntu-16.04:
        os: ubuntu
        os_family: linux
        version: 16.04
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/ubuntu-16.04/Dockerfile
                label: linux && docker
                cpack_generator: DEB
                additionalBuildArgs: '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'
                build_dir: build
            test:
                dockerImage: ubuntu:16.04
                label: linux && docker
    ubuntu-16.04-nocurl:
        os: ubuntu
        os_family: linux
        version: 18.04
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/ubuntu-16.04-nocurl/Dockerfile
                label: linux && docker
                cpack_generator: DEB
                additionalBuildArgs: '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'
                build_dir: build
            test:
                dockerImage: ubuntu:18.04
                label: linux && docker
    ubuntu-18.04:
        os: ubuntu
        os_family: linux
        version: 18.04
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/ubuntu-18.04/Dockerfile
                label: linux && docker
                cpack_generator: DEB
                additionalBuildArgs: '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'
                build_dir: build
            test:
                dockerImage: ubuntu:18.04
                label: linux && docker
    visual-studio-2019-32bit:
        os: windows-ltsc2019
        os_family: windows
        version: 2019
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/windows-visual-studio-2019/Dockerfile
                label: windows && docker
                cpack_generator: WIX
                additionalBuildArgs: ''
                build_dir: c:\build
            test:
                dockerImage: mcr.microsoft.com/windows/servercore:ltsc2019
                runCommand: '"C:\Program Files (x86)\dvrescue\bin\dvrescue.exe" --version'
                label: windows && docker
    visual-studio-2019-64bit:
        os: windows-ltsc2019
        os_family: windows
        version: 2019
        agents:
            build:
                dockerfile: ci/jenkins/docker/build/windows-visual-studio-2019/Dockerfile
                label: windows && docker
                cpack_generator: WIX
                additionalBuildArgs: '--build-arg CMAKE_GENERATOR_PLATFORM=x64 --build-arg VSVSDEVCMD_ARCHM=x64 --build-arg DEPENDENCIES_INSTALL_PATH="C:\Program Files\dvrescue"'
                build_dir: c:\build
            test:
                dockerImage: mcr.microsoft.com/windows/servercore:ltsc2019
                runCommand: '"C:\Program Files\dvrescue\bin\dvrescue.exe" --version'
                label: windows && docker
